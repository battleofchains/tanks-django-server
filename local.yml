version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  elasticsearch: {}

networks:
  tanks:
    driver: bridge

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: battle_of_chains_local_django
    container_name: django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    networks:
      - tanks
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: battle_of_chains_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    networks:
      - tanks
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:6
    container_name: redis
    networks:
      - tanks

  elasticsearch:
    build:
      context: ./compose/local/elk/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./compose/local/elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    env_file:
      - ./.envs/.local/.elk
    networks:
      - tanks

  logstash:
    build:
      context: ./compose/local/elk/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./compose/local/elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
      - ./compose/local/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    env_file:
      - ./.envs/.local/.elk
    networks:
      - tanks
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ./compose/local/elk/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./compose/local/elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    ports:
      - "5601:5601"
    env_file:
      - ./.envs/.local/.elk
    networks:
      - tanks
    depends_on:
      - elasticsearch

  celeryworker:
    <<: *django
    image: battle_of_chains_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: battle_of_chains_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

#  flower:
#    <<: *django
#    image: battle_of_chains_local_flower
#    container_name: flower
#    ports:
#      - "5555:5555"
#    command: /start-flower
